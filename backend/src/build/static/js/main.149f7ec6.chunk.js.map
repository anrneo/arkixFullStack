{"version":3,"sources":["components/Navigation.js","components/NotesList.js","components/CreateNote.js","components/CreateUser.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","className","react_router_dom","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","NotesList","state","notes","url","window","location","hostname","user","getNotes","_callee","res","regenerator_default","wrap","_context","prev","next","localStorage","getItem","axios","get","_this","concat","headers","Authorization","sent","data","href","setState","stop","deleteNote","_callee2","noteId","_context2","delete","this","_this2","map","note","key","_id","src","imagen","alt","title","content","format","createdAt","onClick","CreateNote","pathfile","date","Date","userSelected","users","list","editing","onSubmit","e","updatedNote","newNote","preventDefault","author","put","post","onInputChange","Object","defineProperty","target","name","value","onChangeDate","fetch","then","json","console","log","hits","props","match","params","placeholder","onChange","required","es","selected","lis","previewURL","CreateUser","username","email","password","getUsers","deleteUser","_callee3","userId","_context3","confirm","Login","removeItem","setItem","login","token","App","Navigation_Navigation","react_router","path","exact","component","isLocalhost","Boolean","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.149f7ec6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark p-3\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        <i className=\"material-icons\">\r\n                            assignment </i> PostsApp\r\n                    </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                        <ul className=\"navbar-nav ml-auto\">\r\n                            <li className=\"nav-item active\">\r\n                                <Link to=\"/\" className=\"nav-link\">Login</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/user\" className=\"nav-link\">Registrar Usuario</Link>\r\n                            </li>\r\n                            <li className=\"nav-item active\">\r\n                                <Link to=\"/notelist\" className=\"nav-link\">Posts</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/create\" className=\"nav-link\">Crear Post</Link>\r\n                            </li>\r\n                            \r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { format } from 'timeago.js'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport default class NotesList extends Component {\r\n\r\n    state = {\r\n        notes: [], \r\n        url: (window.location.hostname === 'localhost') ? 'http://localhost:4000' :'https://arkixfullstack.herokuapp.com/',\r\n        user:''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getNotes();\r\n    }\r\n\r\n    getNotes = async () => {\r\n        if (localStorage.getItem('login_id')) {\r\n            const id =  localStorage.getItem('login_id')\r\n            const res = await axios.get(this.state.url+`/api/notes?id=${id}`, {\r\n                headers: {\r\n                    Authorization: localStorage.getItem('token')\r\n                }\r\n            })\r\n            if (res.data===false) {\r\n                window.location.href = '/';\r\n             }else{\r\n                 this.setState({\r\n                     notes: res.data,\r\n                     user : localStorage.getItem('email')\r\n                 });\r\n             }\r\n        }else{\r\n            window.location.href = '/';\r\n        }\r\n        \r\n       \r\n        \r\n    }\r\n\r\n    deleteNote = async (noteId) => {\r\n        await axios.delete(this.state.url+'/api/notes/' + noteId, {\r\n            headers: {\r\n              Authorization: localStorage.getItem('token')\r\n            }\r\n           });\r\n        this.getNotes();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                {\r\n                    this.state.notes.map(note => (\r\n                        <div className=\"col-md-4 p-2\" key={note._id}>\r\n                            <img className=\"card-img-top\" src={note.imagen} alt=\"Card\"></img>\r\n                            <div className=\"card\">\r\n                                \r\n                                <div className=\"card-header d-flex justify-content-between\">\r\n                                    <h5>{note.title}</h5>\r\n                                    <Link to={\"/edit/\" + note._id} className=\"btn btn-secondary\">\r\n                                        <i className=\"material-icons\">\r\n                                            border_color</i>\r\n                                    </Link>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                   \r\n                                    \r\n                                    <p>\r\n                                        Contenido: {note.content}\r\n                                    </p>\r\n                                    <p>\r\n                                        Author: {this.state.user}\r\n                                    </p>\r\n                                    <p>\r\n                                        {format(note.createdAt)}\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"card-footer\">\r\n                                    <button className=\"btn btn-danger\" onClick={() => this.deleteNote(note._id)}>\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport default class CreateNote extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        content: '',\r\n        imagen: '',\r\n        pathfile: '',\r\n        url: (window.location.hostname === 'localhost') ? 'http://localhost:4000' :'https://arkixfullstack.herokuapp.com/',\r\n        date: new Date(),\r\n        userSelected: '',\r\n        users: [],\r\n        list: [],\r\n        editing: false,\r\n        _id: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        if (!localStorage.getItem('token')) {\r\n            window.location.href = '/';\r\n        }else{\r\n\r\n            fetch(`https://pixabay.com/api/?key=13119377-fc7e10c6305a7de49da6ecb25`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            console.log(data.hits);\r\n          this.setState(\r\n            {list: data.hits}\r\n          );\r\n          console.log(this.state.list);\r\n          \r\n        })\r\n\r\n            if (this.props.match.params.id) {\r\n                console.log(this.props.match.params.id)\r\n                const res = await axios.get(this.state.url+'/api/notes/' + this.props.match.params.id, {\r\n                    headers: {\r\n                      Authorization: localStorage.getItem('token')\r\n                    }\r\n                   });\r\n                this.setState({\r\n                    title: res.data.title,\r\n                    content: res.data.content,\r\n                    date: new Date(res.data.date),\r\n                    userSelected: res.data.author,\r\n                    _id: res.data._id,\r\n                    editing: true\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (this.state.editing) {\r\n            const updatedNote = {\r\n                title: this.state.title,\r\n                content: this.state.content,\r\n                author: localStorage.getItem('login_id'),\r\n                date: this.state.date,\r\n                imagen: this.state.imagen\r\n            };\r\n            await axios.put(this.state.url+'/api/notes/' + this.state._id, updatedNote, {\r\n                headers: {\r\n                  Authorization: localStorage.getItem('token')\r\n                }\r\n               });\r\n        } else {\r\n            const newNote = {\r\n                title: this.state.title,\r\n                content: this.state.content,\r\n                author: localStorage.getItem('login_id'),\r\n                date: this.state.date,\r\n                imagen: this.state.imagen\r\n            };\r\n            axios.post(this.state.url+'/api/notes', newNote, {\r\n                headers: {\r\n                  Authorization: localStorage.getItem('token')\r\n                }\r\n               });\r\n        }\r\n        window.location.href = '/notelist';\r\n\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    onChangeDate = date => {\r\n        this.setState({ date });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-6 offset-md-3\">\r\n                <div className=\"card card-body\">\r\n                    <h4>Crear un Post</h4>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        {/* Note Title */}\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Titulo\"\r\n                                onChange={this.onInputChange}\r\n                                name=\"title\"\r\n                                value={this.state.title}\r\n                                required />\r\n                        </div>\r\n                        {/* Note Content */}\r\n                        <div className=\"form-group\">\r\n                            <textarea\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contenido\"\r\n                                name=\"content\"\r\n                                onChange={this.onInputChange}\r\n                                value={this.state.content}\r\n                                required>\r\n                            </textarea>\r\n                        </div>\r\n\r\n                         {/* Note Date */}\r\n                         <div className=\"form-group\">\r\n                            <DatePicker className=\"form-control\" selected={this.state.date} onChange={this.onChangeDate} />\r\n                        </div>\r\n                          {/* Note Imagen */}\r\n                          <div className=\"form-group\">\r\n                                 <select className=\"form-control\"  onChange={this.onInputChange} name=\"imagen\"\r\n                                value={this.state.imagen}\r\n                                required>\r\n                                    <option>Selecciona la Imagen</option>\r\n                                    {\r\n                                        this.state.list.map(lis => (\r\n                                            <option value={lis.previewURL} key={lis.id}> \r\n                                            {lis.previewURL}\r\n                                            </option>\r\n                                        ))\r\n                                    }\r\n                                    \r\n                                </select>\r\n                        </div>\r\n                        <button className=\"btn btn-primary\">\r\n                            Save <i className=\"material-icons\">\r\n                                assignment\r\n</i>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport default class CreateUser extends Component {\r\n\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        url: (window.location.hostname === 'localhost') ? 'http://localhost:4000' :'https://arkixfullstack.herokuapp.com/',\r\n        users: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        //this.getUsers();\r\n    }\r\n\r\n    getUsers = async () => {\r\n        const res = await axios.get(this.state.url+'/api/users');\r\n        this.setState({\r\n            users: res.data\r\n        });\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const res = await axios.post(this.state.url+'/api/users', {\r\n            username: this.state.username,\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        });\r\n        if(res.data===true){\r\n            this.setState({ username: '',email: '', password: '' });\r\n            window.location.href = '/';\r\n        }else{\r\n            console.log('email ya existe');\r\n        }\r\n        \r\n    }\r\n\r\n    deleteUser = async (userId) => {\r\n        const response = window.confirm('are you sure you want to delete it?');\r\n        if (response) {\r\n            await axios.delete(this.state.url+'/api/users/' + userId);\r\n            this.getUsers();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-6 offset-md-3\">\r\n                <div className=\"card card-body\">\r\n                    <h4>Registrar Usuario</h4>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        {/* Note Title */}\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre de usuario\"\r\n                                onChange={this.onInputChange}\r\n                                name=\"username\"\r\n                                value={this.state.username}\r\n                                required />\r\n                        </div>\r\n                        {/* Note Title */}\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                onChange={this.onInputChange}\r\n                                name=\"email\"\r\n                                value={this.state.email}\r\n                                required />\r\n                        </div>\r\n                        {/* Note Content */}\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                onChange={this.onInputChange}\r\n                                value={this.state.password}\r\n                                required/>\r\n                        </div>\r\n                        \r\n                        <button className=\"btn btn-primary\">\r\n                            Registrar <i className=\"material-icons\">\r\n                                assignment\r\n</i>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport axios from 'axios'\r\n\r\nexport default class Login extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        //url: (window.location.hostname === 'localhost') ? 'http://localhost:4000' :'https://arkixfullstack.herokuapp.com',\r\n        url: 'https://arkixfullstack.herokuapp.com',\r\n        date: new Date(),\r\n        userSelected: '',\r\n        users: [],\r\n        editing: false,\r\n        _id: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const res = await axios.post(this.state.url+'/api/users/login', {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        });\r\n       if (res.data===false) {\r\n           console.log('usuario no valido');\r\n           if (localStorage.getItem('token') ) {\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('login_id')\r\n            localStorage.removeItem('email')\r\n           }\r\n    }else{\r\n        console.log(res.data);\r\n        localStorage.setItem('token', `${res.data.login[0].email} ${res.data.token}`)\r\n        localStorage.setItem('login_id', `${res.data.login[0]._id}`)\r\n        localStorage.setItem('email', `${res.data.login[0].email}`)\r\n        window.location.href = '/notelist';\r\n       }\r\n        \r\n\r\n    }\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-md-6 offset-md-3\">\r\n                <div className=\"card card-body\">\r\n                    <h4>Inicair Sesión</h4>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        {/* Note Title */}\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                onChange={this.onInputChange}\r\n                                name=\"email\"\r\n                                value={this.state.email}\r\n                                required />\r\n                        </div>\r\n                        {/* Note Content */}\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"password\"\r\n                                onChange={this.onInputChange}\r\n                                value={this.state.password}\r\n                                required/>\r\n                        </div>\r\n                        \r\n                        <button className=\"btn btn-primary\">\r\n                            Login <i className=\"material-icons\">\r\n                                send\r\n</i>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport Navigation from './components/Navigation'\r\nimport NotesList from './components/NotesList'\r\nimport CreateNote from './components/CreateNote'\r\nimport CreateUser from './components/CreateUser'\r\nimport Login from './components/Login'\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navigation />\r\n      <div className=\"container p-4\">\r\n        <Route path=\"/\" exact component={Login} />\r\n        <Route path=\"/user\" component={CreateUser} />\r\n        <Route path=\"/notelist\" component={NotesList} />\r\n        <Route path=\"/edit/:id\" component={CreateNote} />\r\n        <Route path=\"/create\" component={CreateNote} />\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}